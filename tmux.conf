unbind C-b
set -g prefix C-s

setw -g mode-keys vi


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# vim like navigation
unbind Left
unbind Down
unbind Up
unbind Right
bind-key h select-pane -L
bind-key M-h select-pane -L
bind-key j select-pane -D
bind-key M-j select-pane -D
bind-key k select-pane -U
bind-key M-k select-pane -U
bind-key l select-pane -R
bind-key M-l select-pane -R

# more convenient splitting
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Clear screen with prefix C-p -- since vim-tmux-navigator overrides C-l
bind C-p send-keys 'C-l'

# mouse is okay
set -g mouse on

# boring stauts line
set -g status-left ' '
set -g status-right ' %a %Y-%m-%d %H:%M '

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# make esc register immediately!
set -sg escape-time 0

# don't suspend-client
unbind-key C-z

# vim colors will be borked otherwise
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# vim yanking to proper clipboard
set-option -s set-clipboard off
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
unbind -T copy-mode-vi Enter
# Different copy/paste nonsense for macos
if-shell "uname | grep -q Darwin" "source-file ~/.config/tmux/darwin.conf" "source-file ~/.config/tmux/linux.conf"

set -g status-style 'fg=#a89984'
set -g window-status-current-style 'fg=#000000 bg=#cc241d'
set -g window-status-style 'fg=#a89984'
set -g base-index 1
setw -g pane-base-index 1
set -g status-left "[#S]"
setw -g window-status-format ' #I:#W '
setw -g window-status-current-format ' #I:#W '
set -g status-right "(#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD))  %d %b %Y %l:%M %p"
set -g status-right-length 200
set -g status-justify centre


bind-key -r D run-shell "start-tmux ~/dotfiles"
bind-key -r P run-shell "start-tmux ~/Code/cv-customer-portal-thread-view"
bind-key -r S run-shell "start-tmux ~/Code/customer-portal-settings"
bind-key -r F run-shell "start-tmux ~/Code/conversations-visitor"
